import {
  getWeekGameResults,
  getWeeks,
  getConfigValue,
} from "../../actions/serverRequests"
import SeasonWeeksHandler from "../../components/SeasonWeeksHandler"

export const metadata = {
  title: "Pick6 - Games",
  description: "Generated by create next app",
}

export default async function Games(): Promise<JSX.Element> {
  const currentSeason = await getConfigValue("CURRENT_SEASON")
  const currentWeek = await getConfigValue("CURRENT_WEEK")
  const headers = [
    "#",
    "Pts",
    "Favorite",
    "Spread",
    "Underdog",
    "Pts",
    "Covering Team",
  ]
  const games = await getWeekGameResults(currentSeason, currentWeek)
  const weeks = await getWeeks()
  const weekID = weeks.find(
    (week) =>
      week.season_number == currentSeason && week.week_number == currentWeek
  )?.week_id
  const columnWidths = {
    game_counter: { small: 25, medium: 70, large: 100 },
    favorite_score: { small: 25, medium: 70, large: 100 },
    favorite: { small: 50, medium: 120, large: 200 },
    underdog_score: { small: 25, medium: 70, large: 100 },
    underdog: { small: 50, medium: 120, large: 200 },
    winner: { small: 80, medium: 120, large: 200 },
    spread: { small: 32, medium: 70, large: 100 },
  }
  return (
    <div className="min-h-full w-[calc(100%-50px)] absolute top-0 left-[50px] flex flex-col text-center items-center overflow-x-hidden">
      <h1 className="text-2xl sm:text-3xl md:text-4xl lg:text-5xl mt-1">
        Games
      </h1>
      {weeks.length > 0 ? (
        <SeasonWeeksHandler
          currentSeason={currentSeason}
          currentWeek={currentWeek}
          selectedId={weekID}
          selectOptions={weeks}
          initialData={games}
          headers={headers}
          columnWidths={columnWidths}
        />
      ) : (
        <h3 className="text-red-500">no data</h3>
      )}
    </div>
  )
}
