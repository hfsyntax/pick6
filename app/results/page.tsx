import {
  getSeasons,
  getWeekResults,
  getConfigValue,
} from "../../actions/serverRequests"
import SeasonWeeksHandler from "../../components/SeasonWeeksHandler"

export const metadata = {
  title: "Pick6 - Results",
  description: "Generated by create next app",
}

export default async function results(): Promise<JSX.Element> {
  const currentSeason = await getConfigValue("CURRENT_SEASON")
  const currentWeek = await getConfigValue("CURRENT_WEEK")
  const results = await getWeekResults(
    currentSeason,
    currentSeason,
    currentWeek
  )
  const seasons = await getSeasons()
  const seasonID = seasons.find(
    (season) => season.season_number == currentSeason
  )?.season_id
  const columnWidths = {
    week_number: { small: 40, medium: 70, large: 100 },
    winner_names: { small: 100, medium: 200, large: 200 },
    loser_names: { small: 100, medium: 200, large: 200 },
  }
  const rowHeights = [
    35,
    ...results.map((week, index) => {
      const weekLosers = week["loser_names"]?.split("<br>")?.length
      const weekWinners = week["winner_names"]?.split("<br>")?.length
      const maxPlayers = Math.max(weekLosers, weekWinners)
      return maxPlayers * 35 + 10 + (index !== 0 && 10)
    }),
  ]

  return (
    <div id="container">
      <h1>Pick6 - Results</h1>
      {seasons.length > 0 ? (
        <SeasonWeeksHandler
          currentSeason={currentSeason}
          currentWeek={currentWeek}
          selectedId={seasonID}
          selectOptions={seasons}
          initialData={results}
          headers={["Week #", "0'fers", "Winners"]}
          columnWidths={columnWidths}
          rowHeights={rowHeights}
        />
      ) : (
        <h3 style={{ color: "red" }}>no data</h3>
      )}
    </div>
  )
}
